#
# Copyright (c) 2012-2015 Codenvy, S.A.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#   Codenvy, S.A. - initial API and implementation
#

###########BUTTONS##################
button.add=Add
button.cancel=Cancel
button.create=Create
button.checkout=Checkout
button.delete=Delete
button.rename=Rename
button.close=Close
button.commit=Commit
button.merge=Merge
button.reset=Reset
button.remove=Remove
button.ok=OK
button.fetch=Fetch
button.push=Push
button.pull=Pull

############MESSAGES################
messages.unableGetSshKey = Unable get private ssh key. \
You can create a new SSH key pair in Window->Preferences->Keys And Certificates->SSH Keystore.
messages.warningTitle = Warning
messages.index_empty=Index is empty
messages.add_success=Successfully added to index.
messages.nothingAddToIndex = Nothing to add to index.
messages.add_failed=Failed to add changes to index.
messages.remove_files_success=Removal was successful.
messages.remove_files_failed=Files removal failed.
messages.branches_list_failed=Failed to get branches list.
messages.local_branches_list_failed=Failed to get local branches list.
messages.remote_branches_list_failed=Failed to get remote branches list.
messages.get_config_failed=Failed to get config.
messages.branch_create_failed=Creating a new branch failed.
messages.branch_checkout_failed=Branch checkout failed.
messages.branch_delete_failed=Failed to delete branch.
messages.branch_rename_failed=Failed to rename branch.
messages.commit_failed=Commit failed.
messages.diff.failed=Diff failed.
messages.log_failed=Failed to get history of commits.
messages.init_success=Repository successfully initialized.
messages.init_failed=Failed to initialize repository.
messages.initRepoQuestion = Do you want to initialize the local repository {0}?
messages.push_success=Successfully pushed to <b>{0}</b>
messages.push_fail=Failed to push to remote repository.
messages.pull_success=Successfully pulled from <b>{0}</b>
messages.pull_fail=Failed to pull from <b>{0}</b>
messages.checkout_failed=Checkout reference <b>{0}</b> failed.
messages.fetch_success=Successfully fetched from <b>{0}</b>
messages.fetch_fail=Failed to fetch from <b>{0}</b>
messages.remote_list_failed=No remote repositories are found.
messages.remote_add_failed=Failed to add remote repository.
messages.remote_delete_failed=Failed to delete remote repository.
messages.reset_files_failed=Failed to reset index.
messages.reset_files_successfully=Index successfully reset.
messages.nothing_to_reset=Nothing to reset.
messages.reset_successfully=Successfully reset.
messages.reset_fail=Reset to revision failed.
messages.status_failed=Failed to get work tree status.
messages.selected_remote_fail=Remote repository must be selected.
messages.delete_remote_repository.title=Remove Remote Repository
messages.delete_remote_repository.question=Are you sure you want to delete <b>{0}</b>?
messages.delete_repository.title=Delete Git repository
messages.delete_repository.question=Are you sure you want to delete <b>{0}</b>?
messages.delete_success=Git repository successfully deleted.
messages.notAuthorized = You are not authorized to perform this operation.
importProject.messageNameRepoIncorrect = The repository name is incorrect.
importProject.messageHostIncorrect = The address of the remote server is incorrect.
importProject.messageProtocolIncorrect = The transport protocol or url syntax is incorrect.
importProject.messageStartWithWhiteSpace = The url can not start with a whitespace.

############InitRequestHadler##################
init.started=Initializing <b>{0}</b> repository.
init.finished=Repository <b>{0}</b> successfully initialized.

############CloneRequestHandler################
clone.started=<b>{0}</b> : Cloning <b>{1}</b>.
clone.finished=<b>{0}</b> : <b>{1}</b> cloned successfully.

############PushRequestHandler#################
push.started=<b>{0}</b> : Pushing <b>{1}</b> to <b>{2}</b>.
push.finished=<b>{0}</b> : <b>{1}</b> successfully pushed to <b>{2}</b>.

############PullRequestHandler#################
pull.started=<b>{0}</b> : Pulling from <b>{1}</b> to <b>{2}</b>.
pull.finished=<b>{0}</b> : <b>{1}</b> successfully pulled to <b>{2}</b>.

############FetchRequestHandler################
fetch.started=<b>{0}</b> Fetching from <b>{1}</b> to <b>{2}</b>.
fetch.finished=<b>{0}</b> ><b>{1}</b> successfully fetched to <b>{2}</b>.

############AddRequestHandler##################
add.started=<b>{0}</b> : Adding updates to Git index...
add.finished=<b>{0}</b> : Updates successfully added to Git index.

############CommitRequestHandler###############
commit.started=<b>{0}</b> <i>[master] {1}</i> Committing updates...
commit.finished=<b>{0}</b> <i>[master] {1}</i> Updates successfully committed.

################VIEWS##################
#GitImporterPage
view.import.gitImporterPage.importerInfo = Importer Information
view.import.gitImporterPage.projectUrl = URL:
view.import.gitImporterPage.projectInfo = Project Information
view.import.gitImporterPage.projectName = Name:
view.import.gitImporterPageProjectNamePrompt = Define the name of your project...
view.import.gitImporterPage.projectDescription = Description:
view.import.gitImporterPage.projectDescriptionPrompt = Add a description to your project...
view.import.gitImporterPage.projectPrivacy = Privacy:
view.import.gitImporterPage.projectVisibilityPublic = Public
view.import.gitImporterPage.projectVisibilityPrivate = Private
#Add
view.add_to_index.all_changes=Add all changes in repository to index?
view.add_to_index.multiple=Add to the following files and folders to the index?
view.add_to_index.folder=Add content of folder <b>{0}</b> to index?
view.add_to_index.file=Add file <b>{0}</b> to index?
view.add_to_index.update_field_title=Update (do not add new files to index)
view.add_to_index.title=Add To Index...
#Branch
view.branch.create_new=Create new branch
view.branch.confirm_rename.title=Confirm rename branch
view.branch.confirm_rename.message=Pressing 'OK' will checkout on this branch, rename it and push to remote repository. Current remote branch will delete.
view.branch.type_new=Name:
view.branch.title_rename=Enter branch name
view.branch.type_rename=Name:
view.branch.delete=Delete branch
view.branch.delete_ask=Are you sure you want to delete branch <b>{0}</b>?
view.branch.title=Branches
#Reset
view.reset.files.title=Select files to reset
view.reset.commit.title=Reset to commit
view.reset.soft.type.title=soft
view.reset.soft.type.description=(Just change the ref, the index and workdir are not changed.)
view.reset.mixed.type.title=mixed
view.reset.mixed.type.description=(Change the ref and the index, the workdir is not changed.)
view.reset.hard.type.title=hard
view.reset.hard.type.description=(Change the ref, the index and the workdir)
view.reset.keep.type.title=keep
view.reset.merge.type.title=merge
#Remove
view.remove_from_index.all=Are you sure you want to remove the entire project from index?
view.remove_from_index.only=Remove only from index (file will be untouched)
view.remove_from_index.folder=Remove content of folder <b>{0}</b> from index?
view.remove_from_index.file=Remove file <b>{0}</b> from index?
view.remove_from_index.title=Remove From Index...

#Commit
view.commit.commit_message=Committed with revision <b>\#{0}</b> at time {1}
view.commit.commit_user= by user {0}
view.commit.title=Commit to repository
view.commit.message_field_title=Enter commit message:
view.commit.all_field_title=Add all changes except of new files
view.commit.selection_field_title=Add selected files
view.commit.onlyselection_field_title=Commit only selected files
view.commit.amend_field_title=Amend previous commit
view.commit.grid.date=Date
view.commit.grid.commiter=Committer
view.commit.grid.comment=Comment

#Create
view.create.title=Initialize local repository

#Fetch
view.fetch.title=Fetch from remote repository
view.fetch.remote.field.title=Choose remote repository :
view.fetch.remote.branches.title=Fetch from remote branch:
view.fetch.local.branches.title=To local branch:
view.fetch.all.branches.field.title=Fetch all branches
view.fetch.remove.deleted.refs.title=Remove deleted refs

#Push
view.push.title=Push to remote repository
view.push.remote.field=Choose remote repository:
view.push.local_branch.field=Push from branch:
view.push.remote_branch.field=To branch:

#Remote
view.remote.name.field=Name:
view.remote.location.field=Location:
view.remote.grid.name.field=Name
view.remote.grid.location.field=Location
view.remotes.title=Remote repositories

#History
view.history.diff.index.state=<b>index state</b>
view.history.diff.tree.state=<b>working tree state</b>
view.history.nothing.to.display=<b>nothing for compare</b>
view.history.title=History
view.history.refresh.button.title=Refresh revision list
view.history.project.changes.button.title=Show changes in project
view.history.resource.changes.button.title=Show changes of selected resource
view.history.diff.with.index.button.title=Show diff with index
view.history.diff.with.work.tree.button.title=Show diff with working tree
view.history.diff.with.prev.version.button.title=Show diff with previous version
view.history.revisionA.title=Rev.A:
view.history.revisionB.title=Rev.B:
view.history.date.title=Date:

#Pull
view.pull.title=Pull from remote repository
view.pull.remote.branches.title=Pull from remote branch:
view.pull.local.branches.title=To local branch:

#Merge
view.merge.title=Merge with current HEAD
merged.commits=Merged commits: {0}
merged.new.head=New HEAD commit: {0}
merged.conflicts=Conflicts: {0}

#Checkout reference
checkout.reference.title=Checkout Reference...
checkout.reference.description=Checkout reference (branch, tag) name or commit hash
checkout.reference.message=Enter tag name or commit hash:

############ CONTROLS ################
control.branches.title=Branches...
control.branches.prompt=Work With Branches...
control.delete.title=Delete Repository...
control.delete.prompt=Delete Git Repository...
control.commit.title=Commit...
control.commit.prompt=Commit...
control.fetch.title=Fetch...
control.fetch.prompt=Fetch Data from Remote Repository...
control.init.title=Initialize Repository...
control.init.prompt=Initialize Repository
control.merge.title=Merge...
control.merge.prompt=Merge branch with Head...
control.pull.title=Pull...
control.pull.prompt=Pull Data from Remote Repository...
control.push.title=Push...
control.push.prompt=Push Changes to Remote Repository...
control.remotes.title=Remotes...
control.remotes.prompt=The List of the Remote Repositories...
control.resetFiles.title=Reset Index...
control.resetFiles.prompt=Reset Index...
control.resetToCommit.title=Reset...
control.resetToCommit.prompt=Reset to Revision...
control.history.title=Show History...
control.history.prompt=Show History...
control.status.title=Status
control.status.prompt=Show the Work Tree Status
control.ro.url.window.title=Git URL (Read-Only)...
control.ro.localUrl.title=Local
control.ro.remoteUrl.title=Remote
control.ro.remoteUrls.title=Remote URLs:
control.ro.url.prompt=Project Git URL

############### CloneRepositoryView ###############
noIncorrectProjectNameTitle = Incorrect project name
noIncorrectProjectNameMessage = Project name must contain only Latin letters, digits or these following special characters -._
projectNameStartWith_Message = Project name cannot start with character _

############### ProjectView ###############
project.name=Project name:
